{"version":3,"sources":["App.js","index.js"],"names":["App","className","window","NotificationOK","href","notificationPermissionStatus","setNotificationPermissionStatus","useState","useEffect","Notification","permission","NotificationPermissionStatus","RequestNotificationPermission","type","onClick","requestPermission","then","CreateNotification","notificationTitle","setNotificationTitle","notificationWithIcon","setNotificationWithIcon","notificationDescription","setNotificationDescription","notificationList","setNotificationList","onSubmit","e","preventDefault","notification","icon","body","undefined","onclose","index","findIndex","list","slice","console","info","htmlFor","id","onChange","target","value","required","rows","checked","for","length","map","title","close","role","rootElement","document","getElementById","ReactDOM","render"],"mappings":"sLAKe,SAASA,IACtB,OACE,sBAAKC,UAAU,qBAAf,UACE,iEACG,iBAAkBC,OAWnB,cAACC,EAAD,IAVA,sBAAKF,UAAU,sBAAf,gEACqD,uBACnD,mBACEA,UAAU,aACVG,KAAK,gEAFP,iCAcV,SAASD,IACP,MACEE,EACAC,GACEC,qBACJC,qBAAU,KACRF,EAAgCG,aAAaC,cAC5C,IACH,MAAMC,EAA+B,IAEjC,qCACE,sBAAKV,UAAU,8CAAf,UACE,mBAAGA,UAAU,WAAb,gCACA,sBACEA,UAAS,mBAC0B,YAAjCI,EACI,UACiC,WAAjCA,EACA,SACA,oBALG,aADX,SASGA,OAG6B,YAAjCA,GACC,cAACO,EAAD,CAA+BX,UAAU,gBAM3CW,EAAgC,IAAoB,IAAnB,UAAEX,GAAgB,EACvD,OACE,wBACEY,KAAK,SACLZ,UAAS,0BAAqBA,GAC9Ba,QAAS,KACPL,aAAaM,oBAAoBC,KAC/BV,IALN,+BAcJ,OACE,qCACE,cAACK,EAAD,IACkC,YAAjCN,GACC,mCACE,cAACY,EAAD,SAOV,MAAMA,EAAqB,KACzB,MAAOC,EAAmBC,GAAwBZ,mBAAS,KACpDa,EAAsBC,GAA2Bd,oBAAS,IAC1De,EAAyBC,GAA8BhB,mBAAS,KAChEiB,EAAkBC,GAAuBlB,mBAAS,IAEzD,OACE,qCACE,uBACEmB,SAAWC,IACTA,EAAEC,iBACF,MAAMC,EAAe,IAAIpB,aAAaS,EAAmB,CACvDY,KACEV,GAAwB,uCAC1BW,KAAI,OAAET,QAAF,IAAEA,SAA2BU,IAGnCP,GAAqBE,GAAM,CAACE,KAAiBF,KAC7CE,EAAaI,QAAU,KACrB,MAAMC,EAAQV,EAAiBW,WAAU,IAAMR,IAAME,IACrDJ,GAAqBW,GAAS,IACzBA,EAAKC,MAAM,EAAGH,MACdE,EAAKC,MAAMH,EAAQ,OAG1BI,QAAQC,KAAKV,IAjBjB,UAoBE,qDACA,uBAAOW,QAAQ,0BAA0BvC,UAAU,aAAnD,8BAGA,uBACEY,KAAK,OACLZ,UAAU,eACVwC,GAAG,0BACHC,SAAWf,GAAMR,EAAqBQ,EAAEgB,OAAOC,OAC/CC,UAAQ,IAGV,uBAAOL,QAAQ,8BAA8BvC,UAAU,aAAvD,yBAGA,0BACEA,UAAU,eACVwC,GAAG,8BACHK,KAAK,IACLF,MAAOtB,EACPoB,SAAWf,GAAMJ,EAA2BI,EAAEgB,OAAOC,SAGvD,sBAAK3C,UAAU,aAAf,UACE,uBACEA,UAAU,mBACVY,KAAK,WACL+B,MAAOxB,EACPqB,GAAG,mBACHC,SAAWf,GAAMN,EAAwBM,EAAEgB,OAAOI,WAEpD,wBAAO9C,UAAU,mBAAmB+C,IAAI,mBAAxC,4BACiB,mBAAG5C,KAAK,wBAAR,4BAGnB,wBAAQS,KAAK,SAASZ,UAAS,uBAA/B,uBAIF,sBAAKA,UAAU,OAAf,UACE,uDACCuB,EAAiByB,OAChB,qBAAKhD,UAAU,OAAf,SACE,oBAAIA,UAAU,8BAAd,SACGuB,EAAiB0B,KAAI,CAACrB,EAAcK,IACnC,oBAAIjC,UAAU,kBAAd,SACE,sBAAKA,UAAU,yBAAf,UACE,qBAAKA,UAAU,MAAf,SAAsB4B,EAAasB,QACnC,wBACEtC,KAAK,SACLZ,UAAU,0BACVa,QAAS,KACPe,EAAauB,QACb3B,GAAqBE,GAAM,IACtBA,EAAEU,MAAM,EAAGH,MACXP,EAAEU,MAAMH,EAAQ,OAPzB,uBAHiCA,SAsB3C,qBAAKjC,UAAU,mBAAmBoD,KAAK,QAAvC,qCChLJC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAAC1D,EAAD,MAEFsD,I","file":"static/js/main.544205a3.chunk.js","sourcesContent":["import \"./styles.css\";\nimport \"bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { useEffect, useState } from \"react\";\n\nexport default function App() {\n  return (\n    <div className=\"App container mt-5\">\n      <h1>Web Notification API Playground</h1>\n      {!(\"Notification\" in window) ? (\n        <div className=\"alert alert-warning\">\n          This API is not supported on IE and Safari on iOS. <br />\n          <a\n            className=\"alert-link\"\n            href=\"https://developer.mozilla.org/en-US/docs/Web/API/notification\"\n          >\n            MDN Reference\n          </a>\n        </div>\n      ) : (\n        <NotificationOK />\n      )}\n    </div>\n  );\n}\n\nfunction NotificationOK() {\n  const [\n    notificationPermissionStatus,\n    setNotificationPermissionStatus\n  ] = useState();\n  useEffect(() => {\n    setNotificationPermissionStatus(Notification.permission);\n  }, []);\n  const NotificationPermissionStatus = () => {\n    return (\n      <>\n        <div className=\"row align-items-start justify-content-start\">\n          <p className=\"col-auto\">Permission Status:</p>\n          <span\n            className={`badge bg-${\n              notificationPermissionStatus === \"granted\"\n                ? \"success\"\n                : notificationPermissionStatus === \"denied\"\n                ? \"danger\"\n                : \"warning text-dark\"\n            } col-auto`}\n          >\n            {notificationPermissionStatus}\n          </span>\n        </div>\n        {notificationPermissionStatus === \"default\" && (\n          <RequestNotificationPermission className=\"col-auto\" />\n        )}\n      </>\n    );\n  };\n\n  const RequestNotificationPermission = ({ className }) => {\n    return (\n      <button\n        type=\"button\"\n        className={`btn btn-primary ${className}`}\n        onClick={() => {\n          Notification.requestPermission().then(\n            setNotificationPermissionStatus\n          );\n        }}\n      >\n        Grant Permission\n      </button>\n    );\n  };\n\n  return (\n    <>\n      <NotificationPermissionStatus />\n      {notificationPermissionStatus === \"granted\" && (\n        <>\n          <CreateNotification />\n        </>\n      )}\n    </>\n  );\n}\n\nconst CreateNotification = () => {\n  const [notificationTitle, setNotificationTitle] = useState(\"\");\n  const [notificationWithIcon, setNotificationWithIcon] = useState(false);\n  const [notificationDescription, setNotificationDescription] = useState(\"\");\n  const [notificationList, setNotificationList] = useState([]);\n\n  return (\n    <>\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          const notification = new Notification(notificationTitle, {\n            icon:\n              notificationWithIcon && \"https://source.unsplash.com/100x100/\",\n            body: notificationDescription ?? undefined\n          });\n\n          setNotificationList((e) => [notification, ...e]);\n          notification.onclose = () => {\n            const index = notificationList.findIndex(() => e === notification);\n            setNotificationList((list) => [\n              ...list.slice(0, index),\n              ...list.slice(index + 1)\n            ]);\n          };\n          console.info(notification);\n        }}\n      >\n        <h2>Create Notification</h2>\n        <label htmlFor=\"notification_title_form\" className=\"form-label\">\n          Title (required)\n        </label>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          id=\"notification_title_form\"\n          onChange={(e) => setNotificationTitle(e.target.value)}\n          required\n        />\n\n        <label htmlFor=\"exampleFormControlTextarea1\" className=\"form-label\">\n          Description\n        </label>\n        <textarea\n          className=\"form-control\"\n          id=\"exampleFormControlTextarea1\"\n          rows=\"3\"\n          value={notificationDescription}\n          onChange={(e) => setNotificationDescription(e.target.value)}\n        />\n\n        <div className=\"form-check\">\n          <input\n            className=\"form-check-input\"\n            type=\"checkbox\"\n            value={notificationWithIcon}\n            id=\"flexCheckDefault\"\n            onChange={(e) => setNotificationWithIcon(e.target.checked)}\n          />\n          <label className=\"form-check-label\" for=\"flexCheckDefault\">\n            With icon from <a href=\"https://unsplash.com/\">unsplash</a>\n          </label>\n        </div>\n        <button type=\"submit\" className={`btn btn-primary mt-3`}>\n          Create\n        </button>\n      </form>\n      <div className=\"mt-5\">\n        <h2>Created Notifications</h2>\n        {notificationList.length ? (\n          <div className=\"card\">\n            <ul className=\"list-group list-group-flush\">\n              {notificationList.map((notification, index) => (\n                <li className=\"list-group-item\" key={index}>\n                  <div className=\"row align-items-center\">\n                    <div className=\"col\">{notification.title}</div>\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-danger col-auto\"\n                      onClick={() => {\n                        notification.close();\n                        setNotificationList((e) => [\n                          ...e.slice(0, index),\n                          ...e.slice(index + 1)\n                        ]);\n                      }}\n                    >\n                      Close\n                    </button>\n                  </div>\n                </li>\n              ))}\n            </ul>\n          </div>\n        ) : (\n          <div className=\"alert alert-info\" role=\"alert\">\n            No notification.\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}